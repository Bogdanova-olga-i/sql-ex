"Краткая информация о базе данных Корабли:
Рассматривается БД кораблей, участвовавших во второй мировой войне.
Имеются следующие отношения:
Classes (class, type, country, numGuns, bore, displacement)
Ships (name, class, launched)
Battles (name, date)
Outcomes (ship, battle, result)
Корабли в «классах» построены по одному и тому же проекту, и классу присваивается либо имя первого корабля, построенного по данному проекту, либо названию класса дается имя проекта, которое не совпадает ни с одним из кораблей в БД. Корабль, давший название классу, называется головным.
Отношение Classes содержит имя класса, тип (bb для боевого (линейного) корабля или bc для боевого крейсера), страну, в которой построен корабль, число главных орудий, калибр орудий (диаметр ствола орудия в дюймах) и водоизмещение ( вес в тоннах). В отношении Ships записаны название корабля, имя его класса и год спуска на воду. В отношение Battles включены название и дата битвы, в которой участвовали корабли, а в отношении Outcomes – результат участия данного корабля в битве (потоплен-sunk, поврежден - damaged или невредим - OK).
Замечания. 1) В отношение Outcomes могут входить корабли, отсутствующие в отношении Ships. 
2) Потопленный корабль в последующих битвах участия не принимает."

"Задание: 57 (Serge I: 2003-02-14)
Для классов, имеющих потери в виде потопленных кораблей 
и не менее 3 кораблей в базе данных, 
вывести:
имя класса 
и число потопленных кораблей."

/*Собираю все-все корабли, потопленным присваиваем 1, остальным 0*/
WITH all_ships AS (
    SELECT s.name AS ship_name,  
        s.class AS class, 
        (CASE WHEN o.result = 'sunk' 
            THEN 1 ELSE 0 END) AS result
    FROM ships s 
        LEFT JOIN outcomes o ON s.name = o.ship
    UNION ALL
    SELECT o.ship, 
        c.class, 
        (CASE WHEN o.result = 'sunk' 
            THEN 1 ELSE 0 
            END) AS result
    FROM outcomes o 
        JOIN classes c ON o.ship = c.class),
/*Убираем дубли*/
remove_dupl AS (
    SELECT ship_name, class,  result
    FROM all_ships
    GROUP BY ship_name, class, result)
/*итоговый запрос*/
SELECT class, SUM(result) AS sunked
FROM remove_dupl
GROUP BY class
HAVING COUNT(result)>2 and SUM(result)>0

"Ваш запрос вернул правильные данные на основной базе, но не прошел тест на проверочной базе.
* Неверное число записей (больше на 2)"